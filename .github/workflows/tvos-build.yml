name: tvOS Build Size Check

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Build tvOS app for simulator
      run: |
        cd ios
        xcodebuild -workspace TVTest.xcworkspace -scheme TVTest -configuration Release -destination 'platform=tvOS Simulator,name=Apple TV' build
        
    - name: Get app size
      run: |
        cd ios
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "TVTest.app" -type d)
        echo "App path: $APP_PATH"
        
        # 获取应用总大小
        APP_SIZE=$(du -sh "$APP_PATH" | cut -f1)
        echo "Total app size: $APP_SIZE"
        
        # 获取详细的大小信息
        echo "Detailed size information:"
        du -sh "$APP_PATH"/*
        
        # 使用新的环境文件语法设置输出
        echo "APP_SIZE=$APP_SIZE" >> $GITHUB_ENV
        echo "APP_SIZE=$APP_SIZE" >> $GITHUB_OUTPUT

    - name: Test tvOS render time
      run: |
        cd ios
        # 启动模拟器
        xcrun simctl boot "Apple TV"
        
        # 安装应用
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "TVTest.app" -type d)
        xcrun simctl install booted "$APP_PATH"
        
        # 启动应用并测量渲染时间
        echo "Starting render time test..."
        START_TIME=$(date +%s.%N)
        xcrun simctl launch booted com.TVTest
        END_TIME=$(date +%s.%N)
        
        # 计算渲染时间
        RENDER_TIME=$(echo "$END_TIME - $START_TIME" | bc)
        echo "Render time: $RENDER_TIME seconds"
        
        # 保存渲染时间到环境变量
        echo "RENDER_TIME=$RENDER_TIME" >> $GITHUB_ENV
        echo "RENDER_TIME=$RENDER_TIME" >> $GITHUB_OUTPUT
        
        # 关闭模拟器
        xcrun simctl shutdown "Apple TV" 